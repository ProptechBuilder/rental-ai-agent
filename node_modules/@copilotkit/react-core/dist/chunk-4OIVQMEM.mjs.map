{"version":3,"sources":["../src/utils/extract.ts"],"sourcesContent":["import {\n  Action,\n  COPILOT_CLOUD_PUBLIC_API_KEY_HEADER,\n  MappedParameterTypes,\n  Message,\n  Parameter,\n} from \"@copilotkit/shared\";\nimport { CopilotContextParams } from \"../context\";\nimport { defaultCopilotContextCategories } from \"../components\";\nimport { fetchAndDecodeChatCompletion } from \"./fetch-chat-completion\";\nimport untruncateJson from \"untruncate-json\";\n\ninterface InitialState<T extends Parameter[] | [] = []> {\n  status: \"initial\";\n  args: Partial<MappedParameterTypes<T>>;\n}\n\ninterface InProgressState<T extends Parameter[] | [] = []> {\n  status: \"inProgress\";\n  args: Partial<MappedParameterTypes<T>>;\n}\n\ninterface CompleteState<T extends Parameter[] | [] = []> {\n  status: \"complete\";\n  args: MappedParameterTypes<T>;\n}\n\ntype StreamHandlerArgs<T extends Parameter[] | [] = []> =\n  | InitialState<T>\n  | InProgressState<T>\n  | CompleteState<T>;\n\ninterface ExtractOptions<T extends Parameter[]> {\n  context: CopilotContextParams;\n  instructions: string;\n  parameters: T;\n  include?: IncludeOptions;\n  data?: any;\n  abortSignal?: AbortSignal;\n  stream?: (args: StreamHandlerArgs<T>) => void;\n}\n\ninterface IncludeOptions {\n  readable?: boolean;\n  messages?: boolean;\n}\n\nexport async function extract<const T extends Parameter[]>({\n  context,\n  instructions,\n  parameters,\n  include,\n  data,\n  abortSignal,\n  stream,\n}: ExtractOptions<T>): Promise<MappedParameterTypes<T>> {\n  const { messages } = context;\n\n  const action: Action<any> = {\n    name: \"extract\",\n    parameters,\n    handler: (args: any) => {},\n  };\n\n  const includeReadable = include?.readable ?? false;\n  const includeMessages = include?.messages ?? false;\n\n  let contextString = \"\";\n\n  if (data) {\n    contextString = (typeof data === \"string\" ? data : JSON.stringify(data)) + \"\\n\\n\";\n  }\n\n  if (includeReadable) {\n    contextString += context.getContextString([], defaultCopilotContextCategories);\n  }\n\n  const systemMessage: Message = {\n    id: \"system\",\n    content: makeSystemMessage(contextString, instructions),\n    role: \"system\",\n  };\n\n  const headers = {\n    ...(context.copilotApiConfig.headers || {}),\n    ...(context.copilotApiConfig.publicApiKey\n      ? { [COPILOT_CLOUD_PUBLIC_API_KEY_HEADER]: context.copilotApiConfig.publicApiKey }\n      : {}),\n  };\n\n  const response = await fetchAndDecodeChatCompletion({\n    copilotConfig: context.copilotApiConfig,\n    messages: includeMessages ? [systemMessage, ...messages] : [systemMessage],\n    tools: context.getChatCompletionFunctionDescriptions({ extract: action }),\n    headers,\n    body: context.copilotApiConfig.body,\n    toolChoice: { type: \"function\", function: { name: \"extract\" } },\n    signal: abortSignal,\n  });\n\n  if (!response.events) {\n    throw new Error(\"extract() failed: Could not fetch chat completion\");\n  }\n\n  const reader = response.events.getReader();\n  let isInitial = true;\n\n  while (true) {\n    const { done, value } = await reader.read();\n\n    if (done) {\n      break;\n    }\n\n    if (value.type === \"partial\") {\n      try {\n        let partialArguments = JSON.parse(untruncateJson(value.arguments));\n        stream?.({\n          status: isInitial ? \"initial\" : \"inProgress\",\n          args: partialArguments as Partial<MappedParameterTypes<T>>,\n        });\n        isInitial = false;\n      } catch (e) {}\n    }\n\n    if (value.type === \"function\") {\n      stream?.({\n        status: \"complete\",\n        args: value.arguments as MappedParameterTypes<T>,\n      });\n      return value.arguments as MappedParameterTypes<T>;\n    }\n  }\n\n  throw new Error(\"extract() failed: No function call occurred\");\n}\n\nfunction makeSystemMessage(contextString: string, instructions: string): string {\n  return `\nPlease act as an efficient, competent, conscientious, and industrious professional assistant.\n\nHelp the user achieve their goals, and you do so in a way that is as efficient as possible, without unnecessary fluff, but also without sacrificing professionalism.\nAlways be polite and respectful, and prefer brevity over verbosity.\n\nThe user has provided you with the following context:\n\\`\\`\\`\n${contextString}\n\\`\\`\\`\n\nThey have also provided you with a function you MUST call to initiate actions on their behalf.\n\nPlease assist them as best you can.\n\nThis is not a conversation, so please do not ask questions. Just call the function without saying anything else.\n\nThe user has given you the following task to complete:\n\n\\`\\`\\`\n${instructions}\n\\`\\`\\`\n\nAny additional messages provided are for providing context only and should not be used to ask questions or engage in conversation.\n`;\n}\n"],"mappings":";;;;;;;;;;;;AAAA;AAAA,EAEE;AAAA,OAIK;AAIP,OAAO,oBAAoB;AAqC3B,SAAsB,QAAqC,IAQH;AAAA,6CARG;AAAA,IACzD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,GAAwD;AAvDxD;AAwDE,UAAM,EAAE,SAAS,IAAI;AAErB,UAAM,SAAsB;AAAA,MAC1B,MAAM;AAAA,MACN;AAAA,MACA,SAAS,CAAC,SAAc;AAAA,MAAC;AAAA,IAC3B;AAEA,UAAM,mBAAkB,wCAAS,aAAT,YAAqB;AAC7C,UAAM,mBAAkB,wCAAS,aAAT,YAAqB;AAE7C,QAAI,gBAAgB;AAEpB,QAAI,MAAM;AACR,uBAAiB,OAAO,SAAS,WAAW,OAAO,KAAK,UAAU,IAAI,KAAK;AAAA,IAC7E;AAEA,QAAI,iBAAiB;AACnB,uBAAiB,QAAQ,iBAAiB,CAAC,GAAG,+BAA+B;AAAA,IAC/E;AAEA,UAAM,gBAAyB;AAAA,MAC7B,IAAI;AAAA,MACJ,SAAS,kBAAkB,eAAe,YAAY;AAAA,MACtD,MAAM;AAAA,IACR;AAEA,UAAM,UAAU,kCACV,QAAQ,iBAAiB,WAAW,CAAC,IACrC,QAAQ,iBAAiB,eACzB,EAAE,CAAC,mCAAmC,GAAG,QAAQ,iBAAiB,aAAa,IAC/E,CAAC;AAGP,UAAM,WAAW,MAAM,6BAA6B;AAAA,MAClD,eAAe,QAAQ;AAAA,MACvB,UAAU,kBAAkB,CAAC,eAAe,GAAG,QAAQ,IAAI,CAAC,aAAa;AAAA,MACzE,OAAO,QAAQ,sCAAsC,EAAE,SAAS,OAAO,CAAC;AAAA,MACxE;AAAA,MACA,MAAM,QAAQ,iBAAiB;AAAA,MAC/B,YAAY,EAAE,MAAM,YAAY,UAAU,EAAE,MAAM,UAAU,EAAE;AAAA,MAC9D,QAAQ;AAAA,IACV,CAAC;AAED,QAAI,CAAC,SAAS,QAAQ;AACpB,YAAM,IAAI,MAAM,mDAAmD;AAAA,IACrE;AAEA,UAAM,SAAS,SAAS,OAAO,UAAU;AACzC,QAAI,YAAY;AAEhB,WAAO,MAAM;AACX,YAAM,EAAE,MAAM,MAAM,IAAI,MAAM,OAAO,KAAK;AAE1C,UAAI,MAAM;AACR;AAAA,MACF;AAEA,UAAI,MAAM,SAAS,WAAW;AAC5B,YAAI;AACF,cAAI,mBAAmB,KAAK,MAAM,eAAe,MAAM,SAAS,CAAC;AACjE,2CAAS;AAAA,YACP,QAAQ,YAAY,YAAY;AAAA,YAChC,MAAM;AAAA,UACR;AACA,sBAAY;AAAA,QACd,SAAS,GAAP;AAAA,QAAW;AAAA,MACf;AAEA,UAAI,MAAM,SAAS,YAAY;AAC7B,yCAAS;AAAA,UACP,QAAQ;AAAA,UACR,MAAM,MAAM;AAAA,QACd;AACA,eAAO,MAAM;AAAA,MACf;AAAA,IACF;AAEA,UAAM,IAAI,MAAM,6CAA6C;AAAA,EAC/D;AAAA;AAEA,SAAS,kBAAkB,eAAuB,cAA8B;AAC9E,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAYA;AAAA;AAAA;AAAA;AAAA;AAKF;","names":[]}